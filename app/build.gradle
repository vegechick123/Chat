apply plugin: 'com.android.application'

def keyStorePath_ = keyStorePath
def storePassword_ = storePassword
def keyAlias_ = keyAlias
def keyPassword_ = keyPassword
def storeFile_ = file(keyStorePath_)

static def buildTime() {
    return new Date().format("yyyy-MM-dd HH:mm:ss")
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "hello.leavesC.chat"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode Integer.parseInt(app_versionCode)
        versionName "$app_versionName"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "buildTime", "\"" + buildTime() + "\""
        ndk {
            abiFilters "arm64-v8a"
            abiFilters "x86"
        }
    }
    signingConfigs {
        debug {
            storeFile storeFile_
            storePassword storePassword_
            keyAlias keyAlias_
            keyPassword keyPassword_
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            storeFile storeFile_
            storePassword storePassword_
            keyAlias keyAlias_
            keyPassword keyPassword_
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "isRelease", "false"
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean", "isRelease", "true"
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    applicationVariants.all { variant ->
        def buildType = variant.buildType.name
        def flavorName = variant.flavorName
        def createTime = new Date().format("YYYY-MM-dd_HH_mm_ss", TimeZone.getTimeZone("GMT+08:00"))
        variant.outputs.all {
            outputFileName = flavorName + "_" + buildType + "_v" + defaultConfig.versionName + "_" + createTime + ".apk"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.qmuiteam:qmui:1.1.6'
    implementation 'com.jakewharton:butterknife:10.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    implementation project(':presenter')
    implementation project(':common')
}